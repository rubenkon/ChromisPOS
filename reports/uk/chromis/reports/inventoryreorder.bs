//   Chromis POS - The New Face of Open Source POS 
//   Copyright (c) (c) 2015-2016 2016 Chromis , previous uniCenta & Openbravo POS works   
//
//   This file is part of chromis oPOS
//
//  Chromis POS is free software: you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation, either version 3 of the License, or
//   (at your option) any later version.
//
//   Chromis POS is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with Chromis POS.  If not, see <http://www.gnu.org/licenses/>.

report = new uk.chromis.pos.reports.PanelReportBean();

report.setTitleKey("Menu.InventoryReOrder");
report.setReport("/uk/chromis/reports/inventoryreorder");
report.setResourceBundle("uk/chromis/reports/inventoryreorder_messages");

report.setSentence("SELECT " +
                "STOCKCURRENT.LOCATION AS LOCATIONID, " +
                "LOCATIONS.NAME AS LOCATIONNAME, " +
                "PRODUCTS.REFERENCE, " +
                "PRODUCTS.CODE, PRODUCTS.CODETYPE, " +
                "PRODUCTS.NAME AS PRODUCTNAME, " +
                "PRODUCTS.CATEGORY, " +
                "IFNULL( CONCAT( P.NAME, '/', C.NAME ), C.NAME) AS CATEGORYNAME, " +
                "SUM(STOCKCURRENT.UNITS) AS UNITS, " +
                "COALESCE(STOCKLEVEL.STOCKSECURITY, 0) AS STOCKSECURITY, " +
                "COALESCE(STOCKLEVEL.STOCKMAXIMUM, 0) AS STOCKMAXIMUM " +
                "FROM STOCKCURRENT " +
                "JOIN LOCATIONS ON STOCKCURRENT.LOCATION = LOCATIONS.ID " +
                "JOIN PRODUCTS ON STOCKCURRENT.PRODUCT = PRODUCTS.ID " +
                "JOIN CATEGORIES C ON PRODUCTS.CATEGORY = C.ID " +
                "LEFT JOIN CATEGORIES P ON C.PARENTID=P.ID " +
                "LEFT OUTER JOIN STOCKLEVEL ON STOCKCURRENT.LOCATION = STOCKLEVEL.LOCATION AND STOCKCURRENT.PRODUCT = STOCKLEVEL.PRODUCT " +
                "WHERE ( UNITS < STOCKLEVEL.STOCKSECURITY AND NOT PRODUCTS.MANAGESTOCK = 0 AND NOT PRODUCTS.ISCATALOG = 0 ) AND ?(QBF_FILTER) " +
                "GROUP BY STOCKCURRENT.LOCATION, LOCATIONS.NAME, PRODUCTS.REFERENCE, PRODUCTS.NAME, PRODUCTS.CATEGORY, C.NAME, PRODUCTS.PRICEBUY, PRODUCTS.PRICESELL, PRODUCTS.STOCKVOLUME, PRODUCTS.STOCKCOST, STOCKLEVEL.STOCKSECURITY, STOCKLEVEL.STOCKMAXIMUM " +
                "ORDER BY STOCKCURRENT.LOCATION, CATEGORYNAME, PRODUCTS.NAME");

report.addParameter("PRODUCTS.NAME");
report.addParameter("PRODUCTS.PRICEBUY");
report.addParameter("PRODUCTS.PRICESELL");
report.addParameter("PRODUCTS.CATEGORY");
report.addParameter("PRODUCTS.CODE");
report.addParameter("PRODUCTS.ID");
report.addQBFFilter(new uk.chromis.pos.ticket.ProductFilter());

report.addParameter("PRODUCTS.ATTRIBUTES");
report.addQBFFilter(new uk.chromis.pos.reports.JParamsProperties());

report.addParameter("PRODUCTS.ISCATALOG");
report.addQBFFilter(new uk.chromis.pos.reports.JParamsCatalog());

report.addParameter("STOCKCURRENT.LOCATION");
report.addQBFFilter(new uk.chromis.pos.reports.JParamsLocationWithFirst());

report.addField("LOCATIONID", uk.chromis.data.loader.Datas.STRING);
report.addField("LOCATIONNAME", uk.chromis.data.loader.Datas.STRING);
report.addField("REFERENCE", uk.chromis.data.loader.Datas.STRING);
report.addField("CODE", uk.chromis.data.loader.Datas.STRING);
report.addField("CODETYPE", uk.chromis.data.loader.Datas.STRING);
report.addField("NAME", uk.chromis.data.loader.Datas.STRING);
report.addField("CATEGORY", uk.chromis.data.loader.Datas.STRING);
report.addField("CATEGORYNAME", uk.chromis.data.loader.Datas.STRING);
report.addField("UNITS", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("STOCKSECURITY", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("STOCKMAXIMUM", uk.chromis.data.loader.Datas.DOUBLE);

report;
